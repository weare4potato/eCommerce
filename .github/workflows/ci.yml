name: CI

on:
  push:
    branches:
      - feat/deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
         node-version: '20'

      - name: 자바 17 세팅
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: gradlew에 권한 부여
        run: chmod +x ./gradlew

      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./application-main.yml
          echo "${{ secrets.YML }}" >> ./application-main.yml
        shell: bash

      - name: 빌드
        run: ./gradlew bootJar

      - name: 도커 이미지 빌드
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/potato:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/potato:latest
      - name: AWS 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_KEYPAIR }}
          script: |
            sudo docker rm -f $(docker ps -aq)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/potato:latest
            sudo docker run -it --rm -e JAVA_OPTS="-Xms1G -Xmx2G" -d --name potato -p 8080:8080 yallo468/potato
            sudo docker image prune -f

#      - name: SSH Commands
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ec2-user
#          key: ${{ secrets.SSH_KEY }}
#          port: 22
#          script_stop: true
#          script: |
#            kill -9 $(ps -ef | grep java | head -n 1 | awk '{print $2}')
#            nohup java -jar *.jar 1> /dev/null 2>&1 &